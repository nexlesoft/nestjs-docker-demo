name: Build and push image to ECR

on: push

env:
  SSH_USER: ubuntu
  ip: 18.136.201.138
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 16.x]
        
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name : npm install
        run: npm ci
      - name : tests
        run: |
          npm test
          npm run test:e2e
  
  build:
    name: Build Image
    runs-on: ubuntu-latest
    needs: tests
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Login to ECR
      run: |
        aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 927190304276.dkr.ecr.ap-southeast-1.amazonaws.com
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: 927190304276.dkr.ecr.ap-southeast-1.amazonaws.com
        ECR_REPOSITORY: ecr-for-ec2
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    
    - name: Get EC2 public IP address
      run: |
        sudo apt update
        sudo apt install ssh -y
        mkdir -p ~/.ssh
        sudo chmod 777 ~/.ssh
        ssh-keygen -t rsa -f /home/runner/.ssh/ -q -P "" -y
        sudo ssh-copy-id -i /home/runner/.ssh/id_rsa.pub ubuntu@52.221.180.99 -y
        ssh ubuntu@52.221.180.99 -p V@nBinh1712@
        aws ec2 import-key-pair --key-name "id_rsa" --public-key-material fileb://home/runner/.ssh/id_rsa.pub -y
        aws ec2 describe-key-pairs --key-name id_rsa
        
    - name: Check out code
      uses: actions/checkout@v2
    - name: install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install awscli
        aws --version
    - name: Configure AWS credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} && aws configure set default.region ap-south-1
        ssh -o "IdentitiesOnly=yes" -i id_rsa ubuntu@ec2-52.221.180.99.compute-1.amazonaws.com
        echo "123"
        
#     - name: SSH to EC2 instance && install docker service && pull docker image from ECR
#       uses: appleboy/ssh-action@master
#       with:
#           host: $ip
#           username: ubuntu
#           password: ${{ secrets.EC2_INSTANCE_PASSWORD }}
#           run: |
#             ifconfig
#             sudo apt-get update
#             sudo apt install apt-transport-https ca-certificates curl software-properties-common -y
#             curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
#             sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
#             sudo apt update
#             sudo apt install docker-ce -y
#             docker -v
#             aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 927190304276.dkr.ecr.ap-southeast-1.amazonaws.com
#             docker pull 927190304276.dkr.ecr.ap-southeast-1.amazonaws.com/ecr-for-ec2:${{ github.sha }}
#             docker images
